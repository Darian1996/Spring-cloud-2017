# 定义应用的名称
spring.application.name=spring-cloud-stream-kafka
# 配置 Web 服务端口
server.port=8080
# 失效管理安全
management.security.enabled=false
# 配置需要的 kafka 主题
kafka.topic=darian
# 配置 Spring Kafka 配置信息
spring.kafka.bootstrap-servers=kafka.darian.com:9092
# Kafka 生产者配置
spring.kafka.producer.bootstrap-servers=kafka.darian.com:9092
#spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# kafka 消费者配置
spring.kafka.consumer.group-id=darian-1
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


## 定义 Spring Cloud Stream Source 消息去向
spring.cloud.stream.bindings.output.destination=${kafka.topic}
spring.cloud.stream.bindings.input.destination=${kafka.topic}
# 配置 kafka 的 zookeeper 的节点
spring.cloud.stream.kafka.binder.zk-nodes=zookeeper.darian.com:2181

kafka.topic-darian=darian2
### 针对 kafka 而言，基本模式下
# 可以定义多个 binder
#spring.cloud.stream.bindings.${channel-name}.destination=${kafka.topic}
spring.cloud.stream.bindings.darian.destination=${kafka.topic-darian}
spring.cloud.stream.bindings.darianSink.destination=${kafka.topic-darian}

